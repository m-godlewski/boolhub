version: "3.7"

services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.9.3
    restart: always
    ports:
      - 9000:8000
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/portainer_data:/data
    networks:
      - boolnet
  influxdb:
    container_name: influxdb
    image: influxdb:2.2.0
    restart: always
    ports:
      - 8086:8086
    volumes:
      - /data/influxdb:/var/lib/influxdb2
    networks:
      - boolnet
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - /data/grafana:/var/lib/grafana
    user: "472"
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_PLUGINS_ENABLE_ALPHA=true
    networks:
      - boolnet
  ntfy:
    container_name: ntfy
    image: binwiederhier/ntfy
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - /var/cache/ntfy:/var/cache/ntfy
      - /etc/ntfy:/etc/ntfy
    command:
      - serve
    environment:
      - TZ=CEST
  central:
    container_name: central
    build: ${BOOLHUB_CENTRAL_PATH}
    restart: always
    ports:
      - 8000:8000
    volumes:
      - /data/central/:/usr/src/app/
    env_file:
      - .env
    depends_on:
      - postgresql
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - boolnet
  postgresql:
    container_name: postgresql
    image: postgres:15.3
    restart: always
    ports:
      - 5432:5432
    volumes:
      - /data/postgres/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRE_USER}
      - POSTGRES_PASSWORD=${POSTGRE_PASSWORD}
      - POSTGRES_DB=${POSTGRE_HOST}
    networks:
      - boolnet

networks:
  boolnet:
    driver: bridge
